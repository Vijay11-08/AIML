{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyNDH4UrjmSYs2+3Jk7WclET"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"mBIuKnvCbR0Y"},"outputs":[],"source":["# Full set of Regular Expression questions and answers\n","\n","questions_answers_fixed = [\n","    (\"1. L={w in (0,1)* | each string begins and ends with 1.}\", \"RE: 1(0|1)*1\"),\n","    (\"2. L={w in (0,1)* | each string ends with 00.}\", \"RE: (0|1)*00\"),\n","    (\"3. L={w in (0,1)* | each string contains at least three consecutive 1s.}\", \"RE: (0|1)*111(0|1)*\"),\n","    (\"4. L={w in (0,1)* | each string contains at least three 1s.}\", \"RE: (0|1)*1(0|1)*1(0|1)*1(0|1)*\"),\n","    (\"5. L={w in (0,1)* | each string contains substring '110'.}\", \"RE: (0|1)*110(0|1)*\"),\n","    (\"6. L={w in (0,1)* | each string contains at least 3 characters and the third character is '0'.}\", \"RE: (0|1){2}0(0|1)*\"),\n","    (\"7. L={w in (0,1)* | each string has a number of 0s that is a multiple of 3.}\", \"RE: (1*01*01*01*)*\"),\n","    (\"8. L={w in (0,1)* | each string starts and ends with the same symbol.}\", \"RE: 0(0|1)*0 | 1(0|1)*1\"),\n","    (\"9. L={w in (0,1)* | each string contains an odd length.}\", \"RE: (0|1)((0|1)(0|1))*\"),\n","    (\"10. L={w in (0,1)* | each string starts with 0 and has odd length or starts with 1 and has even length.}\", \"RE: (0(0|1)*) | (1(0|1)(0|1)*)\"),\n","    (\"11. L={w in (0,1)* | each string contains an even number of 0s.}\", \"RE: (1*01*01*)*\"),\n","    (\"12. L={w in (0,1)* | each string contains exactly two 1s.}\", \"RE: (0|1)*1(0|1)*1(0|1)*\"),\n","    (\"13. L={w in (0,1)* | each string length is at least 1 and at most 3.}\", \"RE: (0|1) | (0|1)(0|1) | (0|1)(0|1)(0|1)\"),\n","    (\"14. L={w in (0,1)* | each string does not contain substring '110'.}\", \"RE: (0|1)* (avoiding 110)\"),\n","    (\"15. Accept all combinations of a’s except the null string over Σ ={a}.\", \"RE: a+\"),\n","    (\"16. Language for RE=(a+ab)*.\", \"Language of all strings of 'a' and 'ab' repeated any number of times.\"),\n","    (\"17. Σ ={a,b}* such that third character from right end of the string is always 'a'.\", \"RE: (a|b)*a(a|b)(a|b)\"),\n","    (\"18. Σ ={0,1}* string that does not end with '01'.\", \"RE: (0|1)*(00|11|10)\"),\n","    (\"19. Σ ={0,1}* string with odd number of 1s.\", \"RE: (0*10*1)*0*\"),\n","    (\"20. Recognize language for given RE = (00+1)*(10)+\", \"Language of strings ending with one or more '10'.\"),\n","    (\"21. Recognize language for given RE = 0001*0*11\", \"Strings that start with '000', end with '11', and contain any number of 0s in between.\"),\n","    (\"22. L1={w in (a,b)* | 'aa' is not a substring of any w}\", \"RE: b*(ba|b)*\"),\n","    (\"23. Regular expression for all strings {0,1} without two consecutive 0s.\", \"RE: (1|01)*0?\"),\n","    (\"24. L1={w in (0,1)* | w ends with 1 and does not contain substring '00'}\", \"RE: (0?1)*\"),\n","    (\"25. RE for a string Σ ={0,1}* with the next-to-last symbol as '0'.\", \"RE: (0|1)*0(0|1)\"),\n","    (\"26. String starts with 'a' followed by any number of 'b'.\", \"RE: ab*\"),\n","    (\"27. String contains only an odd number of 'a's.\", \"RE: b*(ab*ab*)*\"),\n","    (\"28. String must start and end with 'a' with any number of 'b' in between.\", \"RE: a(b*)a\"),\n","    (\"29. Describe language for RE = a*b*.\", \"All strings of a’s followed by all strings of b’s.\"),\n","    (\"30. Justify RE a*b* is equal to (ab)*?\", \"No, a*b* allows 'aaaa' and 'bbbb', while (ab)* forces alternating 'ab'.\"),\n","    (\"31. RE for L={a,c,ab,cb,abb,cbb,abbb,cbbb,……}.\", \"RE: (a|c)(b*)\"),\n","    (\"32. RE for L= {aaa,aab,aba,abb,baa,bab,bba,bbb}.\", \"RE: (a|b)(a|b)(a|b)\"),\n","    (\"33. RE for strings which contain at least one 'a'.\", \"RE: (b*ab*)\"),\n","    (\"34. At least one '0' followed by at least one '1' followed by at least one '2'.\", \"RE: (0+1+2)*0(0+1+2)*1(0+1+2)*2(0+1+2)*\"),\n","    (\"35. Describe language for given RE = (1+10)*.\", \"All strings of '1' and '10' repeated any number of times.\"),\n","    (\"36. Σ ={a,b}* string containing at least one 'a' and one 'b'.\", \"RE: (a|b)*a(a|b)*b(a|b)*\"),\n","    (\"37. RE representing strings of a’s and b’s containing at least one double letter.\", \"RE: (a|b)*(aa|bb)(a|b)*\"),\n","    (\"38. If L(r) ={ε,x,xx,xxx,xxxx,xxxxx}, what is r?\", \"RE: x*\"),\n","    (\"39. Σ ={a,b}* contains exactly one occurrence of a double letter (aa or bb).\", \"RE: (a|b)*(aa|bb)(a|b)*\"),\n","    (\"40. Σ ={a,b}* every string does not contain any occurrence of double letters.\", \"RE: (ab|ba)* (a|b)?\"),\n","]\n","\n","# Creating PDF\n","pdf = FPDF()\n","pdf.set_auto_page_break(auto=True, margin=15)\n","pdf.add_page()\n","pdf.set_font(\"Arial\", style=\"\", size=12)\n","\n","# Title\n","pdf.set_font(\"Arial\", style=\"B\", size=16)\n","pdf.cell(200, 10, \"Regular Expressions for Given Languages\", ln=True, align='C')\n","pdf.ln(10)\n","\n","# Adding questions and answers to the PDF\n","for question, answer in questions_answers_fixed:\n","    pdf.set_font(\"Arial\", style=\"B\", size=12)\n","    pdf.multi_cell(0, 7, question)\n","    pdf.set_font(\"Arial\", size=12)\n","    pdf.multi_cell(0, 7, answer)\n","    pdf.ln(2)\n","\n","\n","\n"]},{"cell_type":"code","source":[],"metadata":{"id":"Yr6trHvdbS1t"},"execution_count":null,"outputs":[]}]}